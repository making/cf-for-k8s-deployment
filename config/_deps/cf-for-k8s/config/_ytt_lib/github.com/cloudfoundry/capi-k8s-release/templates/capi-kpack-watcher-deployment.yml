#@ load("@ytt:data", "data")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-api-kpack-watcher
  namespace: #@ data.values.system_namespace
  labels:
    app.kubernetes.io/name: cf-api-kpack-watcher
    app.kubernetes.io/instance: cf-api-kpack-watcher-0
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cf-api-kpack-watcher
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cf-api-kpack-watcher
    spec:
      serviceAccountName: cf-api-kpack-watcher-service-account
      containers:
        - name: cf-api-kpack-watcher
          image: #@ data.values.images.capi_kpack_watcher
          env:
          - name: UAA_CLIENT_SECRET
            value: #@ data.values.uaa.clients.capi_kpack_watcher.secret
          - name: UAA_ENDPOINT
            value: #@ "http://uaa.{}.svc.cluster.local:8080".format(data.values.system_namespace)
          - name: UAA_CLIENT_NAME
            value: capi_kpack_watcher
          - name: CAPI_HOST
            value: #@ "http://capi.{}.svc.cluster.local".format(data.values.system_namespace)
          - name: STAGING_NAMESPACE
            value: #@ data.values.staging_namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kpack-watcher
rules:
- apiGroups: ["build.pivotal.io"]
  resources: ["images", "builds", "builds/status", "images/status"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kpack-watcher-binding
subjects:
- kind: ServiceAccount
  namespace: #@ data.values.system_namespace
  name: default
roleRef:
  kind: ClusterRole
  name: kpack-watcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kpack-watcher-pod-logs-reader
  namespace: #@ data.values.workloads_namespace
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kpack-watcher-pod-logs-binding
  namespace: #@ data.values.workloads_namespace
subjects:
- kind: ServiceAccount
  namespace: #@ data.values.system_namespace
  name: default
roleRef:
  kind: Role
  name: kpack-watcher-pod-logs-reader
  apiGroup: rbac.authorization.k8s.io
